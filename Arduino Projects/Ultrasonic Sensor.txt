Functions Used from Arduino Library:

1. digitalWrite(pin_number,state):
Action: puts a pin on high or low as state of the pin.
Return Type: void

2. pulseIn(pin_number,state):
Action: returns the time for the pin was at high or low state
Return type: integer in milliseconds

3. delayMicroseconds(microseconds):
Action: pauses the execution of the program for specified time
Return Type: void

4. Serial.begin(baudRate):
Action: initiate the serial connection
Return Type: void

5. Serial.println(text_String):
Action: print the text string on next line of serial console
Return Type: void

6. Serial.print(text_String):
Action: print the text string on serial console
Return Type: void

7. pinMode(pinNumber, STATE): where STATE is HIGH or LOW
Action: set the pin behaviour as input or output
Return Type: void
-------------------------------------------------------------------------------------------------------------------------------------------
General purpose function to get output from sensor:
long int getDistanceFromSensor(int trig, int echo)
{
 long duration, distance;
 digitalWrite(trig, LOW);
 delayMicroseconds(2);
 digitalWrite(trig, HIGH);
 delayMicroseconds(10);
 digitalWrite(trig, LOW);
 duration = pulseIn(echo, HIGH);
 distance = (duration / 2) / 29.1;
 if(distance>400)
 {
 distance=400;
 }
 return distance;
}
-------------------------------------------------------------------------------------------------------------------------------------------
General Arduino Program

int trigPin=11;
int echoPin=12;
void setup()
{
 Serial.begin(9600);
 Serial.println("Device Started");
 pinMode(trigPin,OUTPUT);
 pinMode(echoPin,INPUT);
}

void loop()
{
 Serial.println(getDistanceFromSensor(trigPin,echoPin));
}
long int getDistanceFromSensor(int trig, int echo)
{
 long duration, distance;
 digitalWrite(trig, LOW);
 delayMicroseconds(2);
 digitalWrite(trig, HIGH);
 delayMicroseconds(10);
 digitalWrite(trig, LOW);
 duration = pulseIn(echo, HIGH);
 distance = (duration / 2) / 29.1;
 if(distance>400)
 {
 distance=400;
 }
 return distance;
}